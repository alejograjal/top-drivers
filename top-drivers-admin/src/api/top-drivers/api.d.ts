/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/Authentication": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Logs in a user using the provided login model. */
        post: {
            parameters: {
                query?: never;
                header?: {
                    "x-api-version"?: string;
                };
                path?: never;
                cookie?: never;
            };
            /** @description The login credentials. */
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["RequestUserLoginDto"];
                    "application/json": components["schemas"]["RequestUserLoginDto"];
                    "text/json": components["schemas"]["RequestUserLoginDto"];
                    "application/*+json": components["schemas"]["RequestUserLoginDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["AuthenticationResult"];
                        "application/json": components["schemas"]["AuthenticationResult"];
                        "text/json": components["schemas"]["AuthenticationResult"];
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ErrorDetails"];
                        "application/json": components["schemas"]["ErrorDetails"];
                        "text/json": components["schemas"]["ErrorDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ErrorDetails"];
                        "application/json": components["schemas"]["ErrorDetails"];
                        "text/json": components["schemas"]["ErrorDetails"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ErrorDetails"];
                        "application/json": components["schemas"]["ErrorDetails"];
                        "text/json": components["schemas"]["ErrorDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Authentication/refreshToken": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Refreshes the authentication token using the provided token model. */
        post: {
            parameters: {
                query?: never;
                header?: {
                    "x-api-version"?: string;
                };
                path?: never;
                cookie?: never;
            };
            /** @description The token refresh request. */
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["TokenModel"];
                    "application/json": components["schemas"]["TokenModel"];
                    "text/json": components["schemas"]["TokenModel"];
                    "application/*+json": components["schemas"]["TokenModel"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["AuthenticationResult"];
                        "application/json": components["schemas"]["AuthenticationResult"];
                        "text/json": components["schemas"]["AuthenticationResult"];
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ErrorDetails"];
                        "application/json": components["schemas"]["ErrorDetails"];
                        "text/json": components["schemas"]["ErrorDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ErrorDetails"];
                        "application/json": components["schemas"]["ErrorDetails"];
                        "text/json": components["schemas"]["ErrorDetails"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ErrorDetails"];
                        "application/json": components["schemas"]["ErrorDetails"];
                        "text/json": components["schemas"]["ErrorDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Course": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of all course with disabling filter option */
        get: {
            parameters: {
                query?: {
                    /** @description Filter to include or not the disabled courses */
                    includeDisabled?: boolean;
                };
                header?: {
                    "x-api-version"?: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ResponseCourseDto"][];
                        "application/json": components["schemas"]["ResponseCourseDto"][];
                        "text/json": components["schemas"]["ResponseCourseDto"][];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ErrorDetails"];
                        "application/json": components["schemas"]["ErrorDetails"];
                        "text/json": components["schemas"]["ErrorDetails"];
                    };
                };
            };
        };
        put?: never;
        /** Create a new course */
        post: {
            parameters: {
                query?: never;
                header?: {
                    "x-api-version"?: string;
                };
                path?: never;
                cookie?: never;
            };
            /** @description Course model */
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["RequestCourseDto"];
                    "application/json": components["schemas"]["RequestCourseDto"];
                    "text/json": components["schemas"]["RequestCourseDto"];
                    "application/*+json": components["schemas"]["RequestCourseDto"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ResponseCourseDto"];
                        "application/json": components["schemas"]["ResponseCourseDto"];
                        "text/json": components["schemas"]["ResponseCourseDto"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ErrorDetails"];
                        "application/json": components["schemas"]["ErrorDetails"];
                        "text/json": components["schemas"]["ErrorDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Course/{courseId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a an exact existing course */
        get: {
            parameters: {
                query?: never;
                header?: {
                    "x-api-version"?: string;
                };
                path: {
                    /** @description Course identifier */
                    courseId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ResponseCourseDto"];
                        "application/json": components["schemas"]["ResponseCourseDto"];
                        "text/json": components["schemas"]["ResponseCourseDto"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ErrorDetails"];
                        "application/json": components["schemas"]["ErrorDetails"];
                        "text/json": components["schemas"]["ErrorDetails"];
                    };
                };
            };
        };
        /** Update an existing course */
        put: {
            parameters: {
                query?: never;
                header?: {
                    "x-api-version"?: string;
                };
                path: {
                    /** @description Course identifier */
                    courseId: number;
                };
                cookie?: never;
            };
            /** @description Course model to be udpated */
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["RequestCourseDto"];
                    "application/json": components["schemas"]["RequestCourseDto"];
                    "text/json": components["schemas"]["RequestCourseDto"];
                    "application/*+json": components["schemas"]["RequestCourseDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ResponseCourseDto"];
                        "application/json": components["schemas"]["ResponseCourseDto"];
                        "text/json": components["schemas"]["ResponseCourseDto"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ErrorDetails"];
                        "application/json": components["schemas"]["ErrorDetails"];
                        "text/json": components["schemas"]["ErrorDetails"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ErrorDetails"];
                        "application/json": components["schemas"]["ErrorDetails"];
                        "text/json": components["schemas"]["ErrorDetails"];
                    };
                };
            };
        };
        post?: never;
        /** Delete an existing course */
        delete: {
            parameters: {
                query?: never;
                header?: {
                    "x-api-version"?: string;
                };
                path: {
                    /** @description Course identifier */
                    courseId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": boolean;
                        "application/json": boolean;
                        "text/json": boolean;
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ErrorDetails"];
                        "application/json": components["schemas"]["ErrorDetails"];
                        "text/json": components["schemas"]["ErrorDetails"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ErrorDetails"];
                        "application/json": components["schemas"]["ErrorDetails"];
                        "text/json": components["schemas"]["ErrorDetails"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/student-Course": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of all course */
        get: {
            parameters: {
                query?: never;
                header?: {
                    "x-api-version"?: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ResponseSimpleCourseDto"][];
                        "application/json": components["schemas"]["ResponseSimpleCourseDto"][];
                        "text/json": components["schemas"]["ResponseSimpleCourseDto"][];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ErrorDetails"];
                        "application/json": components["schemas"]["ErrorDetails"];
                        "text/json": components["schemas"]["ErrorDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Resource": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of all resources */
        get: {
            parameters: {
                query?: {
                    /** @description Filter to include or not the disabled resources */
                    includeDisabled?: boolean;
                };
                header?: {
                    "x-api-version"?: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ResponseResourceDto"][];
                        "application/json": components["schemas"]["ResponseResourceDto"][];
                        "text/json": components["schemas"]["ResponseResourceDto"][];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ErrorDetails"];
                        "application/json": components["schemas"]["ErrorDetails"];
                        "text/json": components["schemas"]["ErrorDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/student-Resource": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of all resources */
        get: {
            parameters: {
                query?: never;
                header?: {
                    "x-api-version"?: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ResponseSimpleResourceDto"][];
                        "application/json": components["schemas"]["ResponseSimpleResourceDto"][];
                        "text/json": components["schemas"]["ResponseSimpleResourceDto"][];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ErrorDetails"];
                        "application/json": components["schemas"]["ErrorDetails"];
                        "text/json": components["schemas"]["ErrorDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AuthenticationResult: {
            success?: boolean;
            errors?: string[] | null;
            token?: string | null;
            refreshToken?: string | null;
        };
        ErrorDetails: {
            type?: string | null;
            /** Format: int32 */
            statusCode?: number;
            message?: string | null;
            details?: string | null;
            logLevel?: components["schemas"]["LogLevel"];
        };
        /**
         * Format: int32
         * @enum {integer}
         */
        LogLevel: 0 | 1 | 2 | 3 | 4 | 5 | 6;
        RequestCourseDto: {
            name?: string | null;
            description?: string | null;
            /** Format: double */
            cost?: number;
            isPackage?: boolean;
            isEnabled?: boolean;
            /** Format: int32 */
            duration?: number;
            /** Format: int64 */
            id?: number;
        };
        RequestUserLoginDto: {
            nickName?: string | null;
            password?: string | null;
        };
        ResponseCourseDto: {
            name?: string | null;
            description?: string | null;
            /** Format: double */
            cost?: number;
            isPackage?: boolean;
            isEnabled?: boolean;
            /** Format: int32 */
            duration?: number;
            /** Format: int64 */
            id?: number;
            /** Format: date-time */
            created?: string;
            createdBy?: string | null;
            /** Format: date-time */
            modified?: string;
            modifiedBy?: string | null;
            isActive?: boolean;
        };
        ResponseResourceDto: {
            name?: string | null;
            description?: string | null;
            url?: string | null;
            isEnabled?: boolean;
            path?: string | null;
            /** Format: int64 */
            id?: number;
            /** Format: date-time */
            created?: string;
            createdBy?: string | null;
            /** Format: date-time */
            modified?: string;
            modifiedBy?: string | null;
            isActive?: boolean;
        };
        ResponseSimpleCourseDto: {
            name?: string | null;
            description?: string | null;
            /** Format: double */
            cost?: number;
            isPackage?: boolean;
            /** Format: int32 */
            duration?: number;
            /** Format: int64 */
            id?: number;
        };
        ResponseSimpleResourceDto: {
            name?: string | null;
            description?: string | null;
            url?: string | null;
            /** Format: int64 */
            id?: number;
        };
        TokenModel: {
            token?: string | null;
            refreshToken?: string | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
