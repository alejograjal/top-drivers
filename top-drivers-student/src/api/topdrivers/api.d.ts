/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/Authentication": {
    /** Logs in a user using the provided login model. */
    post: {
      parameters: {
        header?: {
          "x-api-version"?: string;
        };
      };
      /** @description The login credentials. */
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["RequestUserLoginDto"];
          "application/json": components["schemas"]["RequestUserLoginDto"];
          "text/json": components["schemas"]["RequestUserLoginDto"];
          "application/*+json": components["schemas"]["RequestUserLoginDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "text/plain": components["schemas"]["AuthenticationResult"];
            "application/json": components["schemas"]["AuthenticationResult"];
            "text/json": components["schemas"]["AuthenticationResult"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
        /** @description Internal Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
      };
    };
  };
  "/api/Authentication/refreshToken": {
    /** Refreshes the authentication token using the provided token model. */
    post: {
      parameters: {
        header?: {
          "x-api-version"?: string;
        };
      };
      /** @description The token refresh request. */
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["TokenModel"];
          "application/json": components["schemas"]["TokenModel"];
          "text/json": components["schemas"]["TokenModel"];
          "application/*+json": components["schemas"]["TokenModel"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "text/plain": components["schemas"]["AuthenticationResult"];
            "application/json": components["schemas"]["AuthenticationResult"];
            "text/json": components["schemas"]["AuthenticationResult"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
        /** @description Internal Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
      };
    };
  };
  "/api/Course": {
    /** Get a list of all course with disabling filter option */
    get: {
      parameters: {
        query?: {
          /** @description Filter to include or not the disabled courses */
          includeDisabled?: boolean;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "text/plain": components["schemas"]["ResponseCourseDto"][];
            "application/json": components["schemas"]["ResponseCourseDto"][];
            "text/json": components["schemas"]["ResponseCourseDto"][];
          };
        };
        /** @description Internal Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
      };
    };
    /** Create a new course */
    post: {
      parameters: {
        header?: {
          "x-api-version"?: string;
        };
      };
      /** @description Course model */
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["RequestCourseDto"];
          "application/json": components["schemas"]["RequestCourseDto"];
          "text/json": components["schemas"]["RequestCourseDto"];
          "application/*+json": components["schemas"]["RequestCourseDto"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["ResponseCourseDto"];
            "application/json": components["schemas"]["ResponseCourseDto"];
            "text/json": components["schemas"]["ResponseCourseDto"];
          };
        };
        /** @description Internal Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
      };
    };
  };
  "/api/Course/{courseId}": {
    /** Get a an exact existing course */
    get: {
      parameters: {
        header?: {
          "x-api-version"?: string;
        };
        path: {
          /** @description Course identifier */
          courseId: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "text/plain": components["schemas"]["ResponseCourseDto"];
            "application/json": components["schemas"]["ResponseCourseDto"];
            "text/json": components["schemas"]["ResponseCourseDto"];
          };
        };
        /** @description Internal Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
      };
    };
    /** Update an existing course */
    put: {
      parameters: {
        header?: {
          "x-api-version"?: string;
        };
        path: {
          /** @description Course identifier */
          courseId: number;
        };
      };
      /** @description Course model to be udpated */
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["RequestCourseDto"];
          "application/json": components["schemas"]["RequestCourseDto"];
          "text/json": components["schemas"]["RequestCourseDto"];
          "application/*+json": components["schemas"]["RequestCourseDto"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "text/plain": components["schemas"]["ResponseCourseDto"];
            "application/json": components["schemas"]["ResponseCourseDto"];
            "text/json": components["schemas"]["ResponseCourseDto"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
        /** @description Internal Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
      };
    };
    /** Delete an existing course */
    delete: {
      parameters: {
        header?: {
          "x-api-version"?: string;
        };
        path: {
          /** @description Course identifier */
          courseId: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
        /** @description Internal Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
      };
    };
  };
  "/api/student-Course": {
    /** Get a list of all course */
    get: {
      parameters: {
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "text/plain": components["schemas"]["ResponseSimpleCourseDto"][];
            "application/json": components["schemas"]["ResponseSimpleCourseDto"][];
            "text/json": components["schemas"]["ResponseSimpleCourseDto"][];
          };
        };
        /** @description Internal Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
      };
    };
  };
  "/api/Resource": {
    /** Get a list of all resources */
    get: {
      parameters: {
        query?: {
          /** @description Filter to include or not the disabled resources */
          includeDisabled?: boolean;
        };
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "text/plain": components["schemas"]["ResponseResourceDto"][];
            "application/json": components["schemas"]["ResponseResourceDto"][];
            "text/json": components["schemas"]["ResponseResourceDto"][];
          };
        };
        /** @description Internal Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
      };
    };
    /** Create a new resource */
    post: {
      parameters: {
        header?: {
          "x-api-version"?: string;
        };
      };
      requestBody?: {
        content: {
          "multipart/form-data": {
            Name?: string;
            Description?: string;
            /** Format: binary */
            Resource?: string;
            IsEnabled?: boolean;
            /** Format: int64 */
            Id?: number;
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["ResponseCourseDto"];
            "application/json": components["schemas"]["ResponseCourseDto"];
            "text/json": components["schemas"]["ResponseCourseDto"];
          };
        };
        /** @description Internal Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
      };
    };
  };
  "/api/student-Resource": {
    /** Get a list of all resources */
    get: {
      parameters: {
        header?: {
          "x-api-version"?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "text/plain": components["schemas"]["ResponseSimpleResourceDto"][];
            "application/json": components["schemas"]["ResponseSimpleResourceDto"][];
            "text/json": components["schemas"]["ResponseSimpleResourceDto"][];
          };
        };
        /** @description Internal Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
      };
    };
  };
  "/api/Resource/{resourceId}": {
    /** Get a an exact existing resource */
    get: {
      parameters: {
        header?: {
          "x-api-version"?: string;
        };
        path: {
          /** @description Resource identifier */
          resourceId: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "text/plain": components["schemas"]["ResponseCourseDto"];
            "application/json": components["schemas"]["ResponseCourseDto"];
            "text/json": components["schemas"]["ResponseCourseDto"];
          };
        };
        /** @description Internal Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
      };
    };
    /** Update an existing resource */
    put: {
      parameters: {
        header?: {
          "x-api-version"?: string;
        };
        path: {
          /** @description Resource identifier */
          resourceId: number;
        };
      };
      requestBody?: {
        content: {
          "multipart/form-data": {
            Name?: string;
            Description?: string;
            /** Format: binary */
            Resource?: string;
            IsEnabled?: boolean;
            /** Format: int64 */
            Id?: number;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "text/plain": components["schemas"]["ResponseCourseDto"];
            "application/json": components["schemas"]["ResponseCourseDto"];
            "text/json": components["schemas"]["ResponseCourseDto"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
        /** @description Internal Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
      };
    };
    /** Delete an existing resource */
    delete: {
      parameters: {
        header?: {
          "x-api-version"?: string;
        };
        path: {
          /** @description Resource identifier */
          resourceId: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
        /** @description Internal Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ErrorDetails"];
            "application/json": components["schemas"]["ErrorDetails"];
            "text/json": components["schemas"]["ErrorDetails"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    AuthenticationResult: {
      success?: boolean;
      errors?: string[] | null;
      token?: string | null;
      refreshToken?: string | null;
    };
    ErrorDetails: {
      type?: string | null;
      /** Format: int32 */
      statusCode?: number;
      message?: string | null;
      details?: string | null;
      logLevel?: components["schemas"]["LogLevel"];
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    LogLevel: 0 | 1 | 2 | 3 | 4 | 5 | 6;
    RequestCourseDto: {
      name?: string | null;
      description?: string | null;
      /** Format: double */
      cost?: number;
      isPackage?: boolean;
      isEnabled?: boolean;
      /** Format: int32 */
      duration?: number;
      /** Format: int64 */
      id?: number;
    };
    RequestUserLoginDto: {
      nickName?: string | null;
      password?: string | null;
    };
    ResponseCourseDto: {
      name?: string | null;
      description?: string | null;
      /** Format: double */
      cost?: number;
      isPackage?: boolean;
      isEnabled?: boolean;
      /** Format: int32 */
      duration?: number;
      /** Format: int64 */
      id?: number;
      /** Format: date-time */
      created?: string;
      createdBy?: string | null;
      /** Format: date-time */
      modified?: string;
      modifiedBy?: string | null;
      isActive?: boolean;
    };
    ResponseResourceDto: {
      name?: string | null;
      description?: string | null;
      url?: string | null;
      isEnabled?: boolean;
      path?: string | null;
      /** Format: int64 */
      id?: number;
      /** Format: date-time */
      created?: string;
      createdBy?: string | null;
      /** Format: date-time */
      modified?: string;
      modifiedBy?: string | null;
      isActive?: boolean;
    };
    ResponseSimpleCourseDto: {
      name?: string | null;
      description?: string | null;
      /** Format: double */
      cost?: number;
      isPackage?: boolean;
      /** Format: int32 */
      duration?: number;
      /** Format: int64 */
      id?: number;
    };
    ResponseSimpleResourceDto: {
      name?: string | null;
      description?: string | null;
      url?: string | null;
      /** Format: int64 */
      id?: number;
    };
    TokenModel: {
      token?: string | null;
      refreshToken?: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
